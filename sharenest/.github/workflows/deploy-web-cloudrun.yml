name: Deploy Web to Cloud Run

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - 'apps/web/Dockerfile'
      - '.github/workflows/deploy-web-cloudrun.yml'

permissions:
  contents: read
  id-token: write

env:
  REGION: ${{ vars.GCP_REGION }}
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  AR_REPOSITORY: ${{ vars.GCP_AR_REPOSITORY }}
  SERVICE: ${{ vars.CLOUD_RUN_SERVICE_WEB }}
  # Public Next.js envs (safe to expose to client)
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Preflight check (secrets/vars)
        run: |
          set -euo pipefail
          echo "Checking required secrets/vars presence (values are masked)..."
          [ -n "${GCP_WORKLOAD_IDENTITY_PROVIDER:-}" ] || { echo "::error::Missing secret GCP_WORKLOAD_IDENTITY_PROVIDER"; exit 1; }
          [ -n "${GCP_SERVICE_ACCOUNT_EMAIL:-}" ] || { echo "::error::Missing secret GCP_SERVICE_ACCOUNT_EMAIL"; exit 1; }
          [ -n "${REGION:-}" ] || { echo "::error::Missing repository variable GCP_REGION"; exit 1; }
          [ -n "${PROJECT_ID:-}" ] || { echo "::error::Missing repository variable GCP_PROJECT_ID"; exit 1; }
          [ -n "${AR_REPOSITORY:-}" ] || { echo "::error::Missing repository variable GCP_AR_REPOSITORY"; exit 1; }
          [ -n "${SERVICE:-}" ] || { echo "::error::Missing repository variable CLOUD_RUN_SERVICE_WEB"; exit 1; }
        env:
          GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          GCP_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          REGION: ${{ env.REGION }}
          PROJECT_ID: ${{ env.PROJECT_ID }}
          AR_REPOSITORY: ${{ env.AR_REPOSITORY }}
          SERVICE: ${{ env.SERVICE }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev" --quiet

      - name: Build Docker image
        run: |
          set -euo pipefail
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build \
            -t "$IMAGE" \
            -f apps/web/Dockerfile \
            --build-arg NEXT_PUBLIC_SUPABASE_URL="${{ env.NEXT_PUBLIC_SUPABASE_URL }}" \
            --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY="${{ env.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" \
            --build-arg NEXT_PUBLIC_SITE_URL="${{ env.NEXT_PUBLIC_SITE_URL }}" \
            --build-arg NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="${{ env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}" \
            .

      - name: Push image
        run: docker push "$IMAGE"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "$SERVICE" \
            --image="$IMAGE" \
            --region="$REGION" \
            --platform=managed \
            --allow-unauthenticated \
            --port=8080 \
            --set-env-vars NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL},NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY},NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL},NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}

      - name: Show service URL
        run: gcloud run services describe "$SERVICE" --region="$REGION" --format='value(status.url)'

